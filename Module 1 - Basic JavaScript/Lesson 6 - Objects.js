/*
Создание объекта

Для создания объекта в JavaScript можно использовать фигурные скобки {}.
Внутри фигурных скобок можно определить свойства и методы объекта.
*/

let person = {
    name: "John",
    age: 13,
    sayName: function () {
        console.log("my name is " + this.name)
    }
}

let person = {}; //     создание объекта с помощью литерала
let person = new Object(); // создание объекта с помощью конструктора



//================================================================//



/*
Доступ к свойствам объекта

Чтобы получить доступ к свойству объекта, можно использовать оператор точки (.) или квадратные скобки []
Оба способа дают одинаковый результат. Оператор точки удобен для доступа к свойствам
с известными именами, а квадратные скобки позволяют использовать выражения и переменные в качестве имени свойства.
*/

console.log(person.name);
console.log(person["name"]);



/*
Добавление и изменение свойств,
Чтобы добавить новое свойство или изменить существующее, можно просто присвоить значение этому свойству
В этом примере мы добавили свойство gender со значением "Male" и изменили значение свойства age на 35.
*/
person.gender = "Male";
person.age = 35;



/*
Удаление свойств,
Чтобы удалить свойство из объекта, можно использовать оператор delete.
*/

delete person.age;



/*
Методы объекта
Методы объекта представляют собой функции, которые могут быть вызваны на объекте. Они используются для
выполнения определенных действий или операций с объектом или его свойствами. Например, метод sayHello объекта
person, который мы создали ранее
*/

person.sayName(); // выведет my name is John





//================================================================//




/*
Прототипы
В JavaScript объекты могут иметь прототипы, которые предоставляют наследование свойств и методов
Прототипы позволяют создавать иерархии объектов и повторно использовать код.
*/

let person = {
    name: "John",
    age: 30
}

let employee = Object.create(person);
employee.salary = 5000;

console.log(employee.name); // выводит John
console.log(employee.salary); // выводит 5000






//================================================================//





/*
Перебор свойств,
Чтобы перебрать все свойства объекта, вы можете использовать цикл for...in.
*/

for (let key in person) {
    console.log(key);
}





//================================================================//



/*
Проверка наличия свойств,
Чтобы проверить, существует ли определенное свойство в объекте, вы можете использовать
оператор in или метод hasOwnProperty()
*/

console.log("name" in person);
console.log(person.hasOwnProperty("name"));





//================================================================//



/*
Использование объектов в реальных ситуациях:
- Объекты могут использоваться для представления данных о пользователях в веб-приложении, например:
    имя, электронная почта, пароль и т. д.

- Они могут представлять продукты в интернет-магазине с различными свойствами, такими как
    название, цена, описание и изображение.

- В играх объекты могут представлять игровых персонажей с характеристиками, способностями и инвентарем.
*/


